//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaDeEmpacotamento
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<log> logs { get; set; }
        public DbSet<materiai> materiais { get; set; }
        public DbSet<pacote> pacotes { get; set; }
        public DbSet<produto> produtos { get; set; }
        public DbSet<usuario> usuarios { get; set; }
    
        public virtual int alterarPacote(Nullable<int> pAid, string pAtipo, Nullable<int> pAquantidade, Nullable<int> pAlargura, Nullable<int> pAaltura, Nullable<int> pAprofundidade, Nullable<int> pApeso, Nullable<int> mAmaterial, Nullable<int> usuarioLogado)
        {
            var pAidParameter = pAid.HasValue ?
                new ObjectParameter("PAid", pAid) :
                new ObjectParameter("PAid", typeof(int));
    
            var pAtipoParameter = pAtipo != null ?
                new ObjectParameter("PAtipo", pAtipo) :
                new ObjectParameter("PAtipo", typeof(string));
    
            var pAquantidadeParameter = pAquantidade.HasValue ?
                new ObjectParameter("PAquantidade", pAquantidade) :
                new ObjectParameter("PAquantidade", typeof(int));
    
            var pAlarguraParameter = pAlargura.HasValue ?
                new ObjectParameter("PAlargura", pAlargura) :
                new ObjectParameter("PAlargura", typeof(int));
    
            var pAalturaParameter = pAaltura.HasValue ?
                new ObjectParameter("PAaltura", pAaltura) :
                new ObjectParameter("PAaltura", typeof(int));
    
            var pAprofundidadeParameter = pAprofundidade.HasValue ?
                new ObjectParameter("PAprofundidade", pAprofundidade) :
                new ObjectParameter("PAprofundidade", typeof(int));
    
            var pApesoParameter = pApeso.HasValue ?
                new ObjectParameter("PApeso", pApeso) :
                new ObjectParameter("PApeso", typeof(int));
    
            var mAmaterialParameter = mAmaterial.HasValue ?
                new ObjectParameter("MAmaterial", mAmaterial) :
                new ObjectParameter("MAmaterial", typeof(int));
    
            var usuarioLogadoParameter = usuarioLogado.HasValue ?
                new ObjectParameter("UsuarioLogado", usuarioLogado) :
                new ObjectParameter("UsuarioLogado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("alterarPacote", pAidParameter, pAtipoParameter, pAquantidadeParameter, pAlarguraParameter, pAalturaParameter, pAprofundidadeParameter, pApesoParameter, mAmaterialParameter, usuarioLogadoParameter);
        }
    
        public virtual int alterarProduto(Nullable<int> pRid, string pRnome, Nullable<int> pRpeso, Nullable<int> pRlargura, Nullable<int> pRaltura, Nullable<int> pRprofundidade, Nullable<int> usuarioLogado, Nullable<int> pRquantidade)
        {
            var pRidParameter = pRid.HasValue ?
                new ObjectParameter("PRid", pRid) :
                new ObjectParameter("PRid", typeof(int));
    
            var pRnomeParameter = pRnome != null ?
                new ObjectParameter("PRnome", pRnome) :
                new ObjectParameter("PRnome", typeof(string));
    
            var pRpesoParameter = pRpeso.HasValue ?
                new ObjectParameter("PRpeso", pRpeso) :
                new ObjectParameter("PRpeso", typeof(int));
    
            var pRlarguraParameter = pRlargura.HasValue ?
                new ObjectParameter("PRlargura", pRlargura) :
                new ObjectParameter("PRlargura", typeof(int));
    
            var pRalturaParameter = pRaltura.HasValue ?
                new ObjectParameter("PRaltura", pRaltura) :
                new ObjectParameter("PRaltura", typeof(int));
    
            var pRprofundidadeParameter = pRprofundidade.HasValue ?
                new ObjectParameter("PRprofundidade", pRprofundidade) :
                new ObjectParameter("PRprofundidade", typeof(int));
    
            var usuarioLogadoParameter = usuarioLogado.HasValue ?
                new ObjectParameter("UsuarioLogado", usuarioLogado) :
                new ObjectParameter("UsuarioLogado", typeof(int));
    
            var pRquantidadeParameter = pRquantidade.HasValue ?
                new ObjectParameter("PRquantidade", pRquantidade) :
                new ObjectParameter("PRquantidade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("alterarProduto", pRidParameter, pRnomeParameter, pRpesoParameter, pRlarguraParameter, pRalturaParameter, pRprofundidadeParameter, usuarioLogadoParameter, pRquantidadeParameter);
        }
    
        public virtual int alterarUsuario(Nullable<int> uSid, string uSnome, string uSlogin, string uSsenha, string cargo, Nullable<int> userLogado)
        {
            var uSidParameter = uSid.HasValue ?
                new ObjectParameter("USid", uSid) :
                new ObjectParameter("USid", typeof(int));
    
            var uSnomeParameter = uSnome != null ?
                new ObjectParameter("USnome", uSnome) :
                new ObjectParameter("USnome", typeof(string));
    
            var uSloginParameter = uSlogin != null ?
                new ObjectParameter("USlogin", uSlogin) :
                new ObjectParameter("USlogin", typeof(string));
    
            var uSsenhaParameter = uSsenha != null ?
                new ObjectParameter("USsenha", uSsenha) :
                new ObjectParameter("USsenha", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var userLogadoParameter = userLogado.HasValue ?
                new ObjectParameter("UserLogado", userLogado) :
                new ObjectParameter("UserLogado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("alterarUsuario", uSidParameter, uSnomeParameter, uSloginParameter, uSsenhaParameter, cargoParameter, userLogadoParameter);
        }
    
        public virtual int salvarPacote(string pAtipo, Nullable<int> pAquantidade, Nullable<int> pAlargura, Nullable<int> pAaltura, Nullable<int> pAprofundidade, Nullable<int> pApeso, Nullable<int> mAmaterial, Nullable<int> usuarioLogado)
        {
            var pAtipoParameter = pAtipo != null ?
                new ObjectParameter("PAtipo", pAtipo) :
                new ObjectParameter("PAtipo", typeof(string));
    
            var pAquantidadeParameter = pAquantidade.HasValue ?
                new ObjectParameter("PAquantidade", pAquantidade) :
                new ObjectParameter("PAquantidade", typeof(int));
    
            var pAlarguraParameter = pAlargura.HasValue ?
                new ObjectParameter("PAlargura", pAlargura) :
                new ObjectParameter("PAlargura", typeof(int));
    
            var pAalturaParameter = pAaltura.HasValue ?
                new ObjectParameter("PAaltura", pAaltura) :
                new ObjectParameter("PAaltura", typeof(int));
    
            var pAprofundidadeParameter = pAprofundidade.HasValue ?
                new ObjectParameter("PAprofundidade", pAprofundidade) :
                new ObjectParameter("PAprofundidade", typeof(int));
    
            var pApesoParameter = pApeso.HasValue ?
                new ObjectParameter("PApeso", pApeso) :
                new ObjectParameter("PApeso", typeof(int));
    
            var mAmaterialParameter = mAmaterial.HasValue ?
                new ObjectParameter("MAmaterial", mAmaterial) :
                new ObjectParameter("MAmaterial", typeof(int));
    
            var usuarioLogadoParameter = usuarioLogado.HasValue ?
                new ObjectParameter("UsuarioLogado", usuarioLogado) :
                new ObjectParameter("UsuarioLogado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("salvarPacote", pAtipoParameter, pAquantidadeParameter, pAlarguraParameter, pAalturaParameter, pAprofundidadeParameter, pApesoParameter, mAmaterialParameter, usuarioLogadoParameter);
        }
    
        public virtual int salvarProduto(string pRnome, Nullable<int> pRpeso, Nullable<int> pRlargura, Nullable<int> pRaltura, Nullable<int> pRprofundidade, Nullable<int> usuarioLogado, Nullable<int> pRquantidade)
        {
            var pRnomeParameter = pRnome != null ?
                new ObjectParameter("PRnome", pRnome) :
                new ObjectParameter("PRnome", typeof(string));
    
            var pRpesoParameter = pRpeso.HasValue ?
                new ObjectParameter("PRpeso", pRpeso) :
                new ObjectParameter("PRpeso", typeof(int));
    
            var pRlarguraParameter = pRlargura.HasValue ?
                new ObjectParameter("PRlargura", pRlargura) :
                new ObjectParameter("PRlargura", typeof(int));
    
            var pRalturaParameter = pRaltura.HasValue ?
                new ObjectParameter("PRaltura", pRaltura) :
                new ObjectParameter("PRaltura", typeof(int));
    
            var pRprofundidadeParameter = pRprofundidade.HasValue ?
                new ObjectParameter("PRprofundidade", pRprofundidade) :
                new ObjectParameter("PRprofundidade", typeof(int));
    
            var usuarioLogadoParameter = usuarioLogado.HasValue ?
                new ObjectParameter("UsuarioLogado", usuarioLogado) :
                new ObjectParameter("UsuarioLogado", typeof(int));
    
            var pRquantidadeParameter = pRquantidade.HasValue ?
                new ObjectParameter("PRquantidade", pRquantidade) :
                new ObjectParameter("PRquantidade", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("salvarProduto", pRnomeParameter, pRpesoParameter, pRlarguraParameter, pRalturaParameter, pRprofundidadeParameter, usuarioLogadoParameter, pRquantidadeParameter);
        }
    
        public virtual int salvarUsuario(string uSnome, string uSlogin, string uSsenha, string cargo, Nullable<int> uSid)
        {
            var uSnomeParameter = uSnome != null ?
                new ObjectParameter("USnome", uSnome) :
                new ObjectParameter("USnome", typeof(string));
    
            var uSloginParameter = uSlogin != null ?
                new ObjectParameter("USlogin", uSlogin) :
                new ObjectParameter("USlogin", typeof(string));
    
            var uSsenhaParameter = uSsenha != null ?
                new ObjectParameter("USsenha", uSsenha) :
                new ObjectParameter("USsenha", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var uSidParameter = uSid.HasValue ?
                new ObjectParameter("USid", uSid) :
                new ObjectParameter("USid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("salvarUsuario", uSnomeParameter, uSloginParameter, uSsenhaParameter, cargoParameter, uSidParameter);
        }
    }
}
